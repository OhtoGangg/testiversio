const { Client, GatewayIntentBits } = require('discord.js');
const axios = require('axios');
const fs = require('fs');

// Korvaa nämä omilla tiedoillasi
const TOKEN = 'MTQxMzA2MTE2ODk3Njc2MDg0Ng.G_hu9I.qmF8iWsoB6hcvwplznbCGTDOPzftxMUBsFalAM'; // Discord-botin token
const GUILD_ID = '1413060079611154595'; // Discord palvelimen ID
const LIVESSA_ROLE_ID = '1413060382947278918'; // Rooli, jonka lisäät/laitat pois
const MAINOSTUS_CHANNEL_ID = '1413060218300006420'; // Viestikanavan ID missä ilmoitukset näkyvät
const YOUR_STRIIMAAJA_ROLE_ID = '1413060344972316724';
const TWITCH_CLIENT_ID = 'nbrj1v8b1mwh963aswrw24lj6x33v9'; // Twitch API Client ID
const TWITCH_ACCESS_TOKEN = 'vh64wcuewy9be1w5t1eg3zshxs1itq'; // Twitch API Access Token

// Tallennustiedoston polku
const dataFilePath = './data.json';

// Ladataan data
let userData = {};
try {
    const rawData = fs.readFileSync(dataFilePath, 'utf8');
    userData = JSON.parse(rawData);
} catch (err) {
    console.log('Ei voitu lukea data.json-tiedostoa, luodaan uusi.');
    userData = {};
}

// Funktio datan tallentamiseen
function saveData() {
    fs.writeFileSync(dataFilePath, JSON.stringify(userData, null, 2));
}

// Discord.js client
const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers, GatewayIntentBits.GuildMessages, GatewayIntentBits.GuildVoiceStates] });

client.once('ready', async () => {
    console.log(`Kirjauduttu sisään nimellä ${client.user.tag}`);

    const guild = await client.guilds.fetch(GUILD_ID);
    const members = await guild.members.fetch();

    // Tarkistetaan säännöllisesti
    setInterval(async () => {
        for (const member of members.values()) {
            // Tarkista, että jäsenellä on "STRIIMAAJA" rooli
            // Vaihda 'YOUR_STRIIMAAJA_ROLE_ID' oikeaan rooli-ID:hen
            if (member.roles.cache.has('YOUR_STRIIMAAJA_ROLE_ID')) {
                // Oletetaan, että Twitch-käyttäjänimi on jäsenen nickname
                const twitchUsername = member.displayName;

                try {
                    const response = await axios.get('https://api.twitch.tv/helix/streams', {
                        headers: {
                            'Client-ID': TWITCH_CLIENT_ID,
                            'Authorization': `Bearer ${TWITCH_ACCESS_TOKEN}`
                        },
                        params: {
                            user_login: twitchUsername
                        }
                    });
                    const isLive = response.data.data.length > 0;

                    const memberId = member.id;
                    if (!userData[memberId]) {
                        userData[memberId] = {};
                    }

                    const currentlyLive = userData[memberId]._isLive || false;

                    // Jos menee live
                    if (isLive && !currentlyLive) {
                        // Lähetä ilmoitus
                        const channel = guild.channels.cache.get(MAINOSTUS_CHANNEL_ID);
                        const message = await channel.send(`${member.user.username} aloitti livelähetyksen jota et halua missata, klikkaa tästä: ${getTwitchUrl(twitchUsername)}!`);

                        // Lisää rooli
                        await member.roles.add(LIVESSA_ROLE_ID);

                        // Päivitä data ja tallenna
                        userData[memberId]._isLive = true;
                        userData[memberId]._liveMessageId = message.id;
                        saveData();
                    }
                    // Jos lopettaa lähetyksen
                    else if (!isLive && currentlyLive) {
                        const channel = guild.channels.cache.get(MAINOSTUS_CHANNEL_ID);
                        const messageId = userData[memberId]._liveMessageId;
                        if (messageId) {
                            try {
                                const msg = await channel.messages.fetch(messageId);
                                await msg.delete();
                            } catch (err) {
                                console.log('Viestin poisto epäonnistui:', err);
                            }
                        }

                        // Poista rooli
                        await member.roles.remove(LIVESSA_ROLE_ID);

                        // Päivitä data ja tallenna
                        userData[memberId]._isLive = false;
                        userData[memberId]._liveMessageId = null;
                        saveData();
                    }
                } catch (err) {
                    console.error('Virhe Twitch API:ssä:', err);
                }
            }
        }
    }, 60000); // tarkistaa minuutin välein
});

// Funktion Twitch-URL
function getTwitchUrl(username) {
    return `https://www.twitch.tv/${username}`;
}

client.login(TOKEN);
